// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repository_DAL_;

#nullable disable

namespace Repository_DAL_.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20240717102004_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Repository_DAL_.Model.Category", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Category_Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Image_Srl")
                        .HasColumnType("integer");

                    b.HasKey("Category_Id");

                    b.HasIndex("Image_Srl");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Repository_DAL_.Model.Image", b =>
                {
                    b.Property<int>("Image_Srl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Image_Srl"));

                    b.Property<string>("Image_Description")
                        .HasColumnType("text");

                    b.Property<string>("Image_Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Image_Srl");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Repository_DAL_.Model.Product", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Product_Id"));

                    b.Property<int>("Category_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Image_Srl")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("boolean");

                    b.Property<string>("IsVeg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Quantity_List")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Product_Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Image_Srl");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Repository_DAL_.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("E_Mail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<string>("Usr_Nam")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Repository_DAL_.Model.Category", b =>
                {
                    b.HasOne("Repository_DAL_.Model.Image", "Image")
                        .WithMany()
                        .HasForeignKey("Image_Srl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Repository_DAL_.Model.Product", b =>
                {
                    b.HasOne("Repository_DAL_.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository_DAL_.Model.Image", "Image")
                        .WithMany()
                        .HasForeignKey("Image_Srl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Repository_DAL_.Model.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
